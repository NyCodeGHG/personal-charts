apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "miniflux.fullname" . }}
  labels:
    {{- include "miniflux.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "miniflux.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "miniflux.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "miniflux.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- include "miniflux.postgresql.wait-init-container" . | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "miniflux.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command: [ "miniflux", "-healthcheck", "auto" ]
          readinessProbe:
            exec:
              command: [ "miniflux", "-healthcheck", "auto" ]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.secretName" .Subcharts.postgresql }}
                  key: {{ include "postgresql.userPasswordKey" .Subcharts.postgresql }}
            - name: DATABASE_URL
              value: "postgres://{{ include "postgresql.username" .Subcharts.postgresql }}:$(POSTGRES_PASSWORD)@{{ include "postgresql.primary.fullname" .Subcharts.postgresql }}/{{ include "postgresql.database" .Subcharts.postgresql }}?sslmode=disable"
            {{- if .Values.debug }}
            - name: DEBUG
              value: "1"
            {{- end }}
            {{- if .Values.auth.oauth2.enabled }}
            - name: OAUTH2_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "miniflux.configmap" . }}
                  key: provider
            - name: OAUTH2_CLIENT_ID_FILE
              value: /secrets/oauth_client_id
            - name: OAUTH2_CLIENT_SECRET_FILE
              value: /secrets/oauth_client_secret
            - name: OAUTH2_REDIRECT_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "miniflux.configmap" . }}
                  key: redirectUrl
            {{- if .Values.auth.oauth2.discoveryEndpoint }}
            - name: OAUTH2_OIDC_DISCOVERY_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "miniflux.configmap" . }}
                  key: discoveryEndpoint
            {{- end }}
            {{- if .Values.auth.oauth2.enableUserCreation }}
            - name: OAUTH2_USER_CREATION
              value: "1"
            {{- end }}
            {{- end }}
            {{- if .Values.metrics.prometheus.enabled }}
            - name: METRICS_COLLECTOR
              value: "1"
            {{- if .Values.metrics.prometheus.refreshInterval }}
            - name: METRICS_REFRESH_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "miniflux.configmap"}}
                  key: metricsRefreshInterval
            {{- end }}
            - name: METRICS_ALLOWED_NETWORKS
              value: "0.0.0.0/0"
            {{- end }}
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "miniflux.configmap" . }}
                  key: baseUrl
                  optional: true
          volumeMounts:
          {{- if .Values.auth.oauth2.enabled }}
            - mountPath: /secrets
              name: oauth
              readOnly: true
          {{- end }}
      volumes:
        {{- if .Values.auth.oauth2.enabled }}
        - name: oauth
          secret:
            secretName: {{ include "miniflux.oauth-secret" . }}
            items:
              - key: {{ include "miniflux.oauth-secret-client-id-key" . }}
                path: oauth_client_id
              - key: {{ include "miniflux.oauth-secret-client-secret-key" . }}
                path: oauth_client_secret
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
