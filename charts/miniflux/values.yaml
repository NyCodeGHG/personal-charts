## The container image to use.
## Defaults to miniflux/miniflux.
## @section Container Image
## @param image.repository The Image repository to use
## @param image.pullPolicy The pullPolicy to use for the image
## @param image.tag Overrides the image tag whose default is the chart appVersion.
image:
  repository: miniflux/miniflux
  pullPolicy: IfNotPresent
  tag: ""

containerPorts:
  web: 8080

## @section Common parameters
## @descriptionStart This section contains parameters common to most of the Helm Charts in the wild
### as they are mainly auto-generated by initializing a new Helm Chart directory.
## @descriptionEnd

## Number of miniflux replicas to deploy
## @param replicaCount Number of miniflux replicas to deploy
##
replicaCount: 1

## image pull secrets to used to fetch the image from a private or rate-limited registry
## @param imagePullSecrets image pull secrets to used to fetch the image from a private or rate-limited registry
##
imagePullSecrets: []

## String to partially override the chart name
## @param nameOverride String to partially override the chart name
##
nameOverride: ""

## String to fully override the chart name in the deployed manifests
## @param fullnameOverride String to fully override the chart name in the deployed manifests
##
fullnameOverride: ""

## Annotations for miniflux pods
## @param Annotations for miniflux pods
##
podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80

ingressRoute:
  enabled: false
  host: "miniflux.example.com"
  entryPoints:
  #   - web
  #   - webSecure
  tls:
#    certResolver: ""
#    domains:
#      - main: "miniflux.example.com"
#    secretName: "example-secret"

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

global:
  postgresql:
    auth:
      enablePostgresUser: false
      username: "miniflux"
      password: "miniflux"
      existingSecret: ""
      database: "miniflux"

migrations:
  restartPolicy: Never
  timeoutSeconds: 10

debug: false
baseUrl: ""

auth:
  createAdmin: false
  adminUsername: ""
  adminPassword: ""
  existingSecret: ""
  secretKeys:
    username: "username"
    password: "password"
  oauth2:
    enabled: false
    enableUserCreation: true
    provider: "oidc"
    clientId: ""
    clientSecret: ""
    redirectUrl: ""
    discoveryEndpoint: ""
    existingSecret: ""
    secretKeys:
      clientSecret: "clientSecret"
      clientId: "clientId"

metrics:
  prometheus:
    enabled: false
    refreshInterval: "" # Default is 60 seconds
    serviceMonitor:
      enabled: false
      interval: ""

networkPolicy:
  enabled: true
  allowOutgoingPorts:
    - 80
    - 443
